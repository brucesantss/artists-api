// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  email    String @unique
  password String
  role     Role   @default(READER) //3 roles, READER; ARTIST; ADMIN;
  
  comicsFav Comic[] // o usuário pode ter comics favoritas 
  artist Artist? // um usuário pode não ser artista
}

model Artist {
  id        String  @id @default(uuid())
  biography String
  comics    Comic[] //o artista vai publicar comics

  // foreing key, vinculando um User com um Artist - conta de artista
  userId String @unique 
  user   User   @relation(fields: [userId], references: [id])
}

model Comic {
  id    Int    @id @default(autoincrement())
  title String
  genre String
  views Int    @default(0)

  // vinculando as comics com o artista que publicou
  artistId String
  artist   Artist @relation(fields: [artistId], references: [id])

  // biodirecional prisma - comics favoritas de READER
  user User[]
}

// roles do TUM
enum Role {
  READER
  ARTIST
  ADMIN
}
